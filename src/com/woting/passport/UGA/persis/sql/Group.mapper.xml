<?xml version="1.0" encoding="UTF-8" ?>

<!-- 我听用户 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="WT_GROUP">
  <!-- 对象定义:用户信息 -->
  <resultMap id="groupMap" type="WtGroup">
    <id      column="id"              property="groupId"         jdbcType="VARCHAR"/>
    <result  column="groupNum"        property="groupNum"        jdbcType="VARCHAR"/>
    <result  column="groupName"       property="groupName"       jdbcType="VARCHAR"/>
    <result  column="groupSignature"  property="groupSignature"  jdbcType="VARCHAR"/>
    <result  column="groupPwd"        property="groupPwd"        jdbcType="VARCHAR"/>
    <result  column="groupImg"        property="groupImg"        jdbcType="VARCHAR"/>
    <result  column="groupType"       property="groupType"       jdbcType="INTEGER"/>
    <result  column="pId"             property="PId"             jdbcType="VARCHAR"/>
    <result  column="sort"            property="sort"            jdbcType="INTEGER"/>
    <result  column="createUserId"    property="createUserId"    jdbcType="VARCHAR"/>
    <result  column="adminUserIds"    property="adminUserIds"    jdbcType="VARCHAR"/>
    <result  column="defaultFreq"     property="defaultFreq"     jdbcType="VARCHAR"/>
    <result  column="descn"           property="descn"           jdbcType="VARCHAR"/>
    <result  column="cTime"           property="CTime"           jdbcType="TIMESTAMP"/>
    <result  column="lmTime"          property="lmTime"          jdbcType="TIMESTAMP"/>
    <result  column="groupCount"      property="groupCount"      jdbcType="INTEGER"/>
  </resultMap>

  <!-- 对象定义:组用户信息 -->
  <resultMap id="groupUserMap" type="WtGroupUser">
    <id      column="id"           property="id"           jdbcType="VARCHAR"/>
    <result  column="groupId"      property="groupId"      jdbcType="VARCHAR"/>
    <result  column="userId"       property="userId"       jdbcType="VARCHAR"/>
    <result  column="inviter"      property="inviter"      jdbcType="VARCHAR"/>
    <result  column="groupAlias"   property="groupAlias"   jdbcType="VARCHAR"/>
    <result  column="groupDescn"   property="groupDescn"   jdbcType="VARCHAR"/>
    <result  column="cTime"        property="CTime"        jdbcType="TIMESTAMP"/>
  </resultMap>

  <!-- 所有列 -->
  <sql id="Base_Column_List">
    id, groupNum, groupName, groupSignature, groupPwd, groupImg, groupType, pId, sort, createUserId, adminUserIds, defaultFreq, descn, cTime, lmTime
  </sql>

  <!-- 条件子句 -->
  <sql id="WhereClauseByEntiey">
    <where>
      <trim prefix="(" suffix=")" prefixOverrides="and">
        <if test="groupId!=null"> and id=#{groupId,jdbcType=VARCHAR}</if>
        <if test="groupNum!=null"> and groupNum=#{groupNum,jdbcType=VARCHAR}</if>
        <if test="groupName!=null"> and groupName=#{groupName,jdbcType=VARCHAR}</if>
        <if test="groupSignature!=null"> and groupSignature=#{groupSignature,jdbcType=VARCHAR}</if>
        <if test="groupPwd!=null"> and groupPwd=#{groupPwd,jdbcType=VARCHAR}</if>
        <if test="groupImg!=null"> and groupImg=#{groupImg,jdbcType=VARCHAR}</if>
        <if test="groupType!=null"> and groupType=#{groupType,jdbcType=INTEGER}</if>
        <if test="pId!=null"> and pId=#{pId,jdbcType=VARCHAR}</if>
        <if test="sort!=null and sort!=0"> and sort=#{sort,jdbcType=INTEGER}</if>
        <if test="createUserId!=null"> and createUserId=#{createUserId,jdbcType=VARCHAR}</if>
        <if test="adminUserIds!=null"> and adminUserIds=#{adminUserIds,jdbcType=VARCHAR}</if>
        <if test="descn!=null"> and descn=#{descn,jdbcType=VARCHAR}</if>
        <if test="defaultFreq!=null"> and defaultFreq=#{defaultFreq,jdbcType=VARCHAR}</if>
        <if test="CTime!=null"> and cTime=#{CTime,jdbcType=TIMESTAMP}</if>
        <if test="lmTime!=null"> and lmTime=#{lmTime,jdbcType=TIMESTAMP}</if>
      </trim>
    </where>
  </sql>

  <!-- 获得记录条数-->
  <select id="getCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(*) from plat_Group <if test="_parameter!=null"><include refid="WhereClauseByEntiey"/></if>
  </select>

  <!-- 获得列表 -->
  <select id="getList" resultMap="groupMap" parameterType="java.util.Map">
    select <include refid="Base_Column_List"/> from plat_Group
    <if test="_parameter!=null"><include refid="WhereClauseByEntiey"/></if>
    <if test="orderByClause!=null">order by ${orderByClause}</if>
  </select>

  <!-- 获得一条数据 -->
  <select id="getInfo" resultMap="groupMap" parameterType="java.util.Map">
    select <include refid="Base_Column_List"/> from plat_Group <if test="_parameter!=null"><include refid="WhereClauseByEntiey"/></if>
  </select>
  <select id="getGroupById" resultMap="groupMap" parameterType="java.lang.String">
    select <include refid="Base_Column_List"/> from plat_Group where id=#{value,jdbcType=VARCHAR}
  </select>

  <!-- 得到某用户所属的用户组 -->
  <select id="getGroupListByUserId"  resultType="java.util.HashMap" parameterType="java.lang.String">
    select a.*, b.groupCount, c.* from plat_Group a,
    (select groupId, count(userId) groupCount from plat_GroupUser group by groupId) b,
    (select * from plat_GroupUser where userId=#{value, jdbcType=VARCHAR}) c
    where a.id=b.groupId and a.id=c.groupId
  </select>

  <!-- 得到某用户所创建的用户组 -->
  <select id="getCreateGroupListByUserId"  resultType="java.util.HashMap" parameterType="java.lang.String">
    select a.*, b.groupCount, c.* from plat_Group a,
    (select groupId, count(userId) groupCount from plat_GroupUser group by groupId) b,
    (select * from plat_GroupUser where userId=#{value, jdbcType=VARCHAR}) c
    where a.id=b.groupId and a.createUserId=#{value, jdbcType=VARCHAR} and a.id=c.groupId
  </select>
  <!-- 得到某用户所创建的用户组的数量 -->
  <select id="getCreateGroupCount" resultType="java.lang.Integer" parameterType="java.lang.String">
    select count(*) from plat_Group where createUserId=#{value, jdbcType=VARCHAR} and groupType=1
  </select>
  <!-- 得到某用户所创建的用户组的数量 -->
  <select id="getCreateGroupLimitTimeCount" resultType="java.lang.Integer" parameterType="java.util.Map">
  <![CDATA[
    select count(*) from plat_Group where createUserId=#{userId, jdbcType=VARCHAR} and CTime>#{lastTimeMinutes, jdbcType=TIMESTAMP} and groupType=1
  ]]>
  </select>
  <!-- 判断所给定的组号是否重复 -->
  <select id="existGroupNum" resultType="java.lang.Integer" parameterType="java.lang.String">
    select count(*) from plat_Group where groupNum=#{value, jdbcType=VARCHAR}
  </select>
  <!-- 用户是否已在组 -->
  <select id="existUserInGroup" resultType="java.lang.Integer" parameterType="java.lang.String">
    select count(*) from plat_GroupUser where groupId=#{groupId, jdbcType=VARCHAR} and userId=#{userId, jdbcType=VARCHAR}
  </select>

  <!-- 新增数据 -->
  <insert id="insert" parameterType="java.util.Map"> insert into plat_Group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupId!=null">id,</if>
      <if test="groupNum!=null">groupNum,</if>
      <if test="groupName!=null">groupName,</if>
      <if test="groupSignature!=null">groupSignature,</if>
      <if test="groupPwd!=null">groupPwd,</if>
      <if test="groupImg!=null">groupImg,</if>
      <if test="groupType!=null">groupType,</if>
      <if test="pId!=null">pId,</if>
      <if test="sort!=null and sort!=0">sort,</if>
      <if test="createUserId!=null">createUserId,</if>
      <if test="adminUserIds!=null">adminUserIds,</if>
      <if test="adminUserIds!=null">defaultFreq,</if>
      <if test="descn!=null">descn,</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="groupId!=null">#{groupId,jdbcType=VARCHAR},</if>
      <if test="groupNum!=null">#{groupNum,jdbcType=VARCHAR},</if>
      <if test="groupName!=null">#{groupName,jdbcType=VARCHAR},</if>
      <if test="groupSignature!=null">#{groupSignature,jdbcType=VARCHAR},</if>
      <if test="groupPwd!=null">#{groupPwd,jdbcType=VARCHAR},</if>
      <if test="groupImg!=null">#{groupImg,jdbcType=VARCHAR},</if>
      <if test="groupType!=null">#{groupType,jdbcType=INTEGER},</if>
      <if test="pId!=null">#{pId,jdbcType=VARCHAR},</if>
      <if test="sort!=null and sort!=0">#{sort,jdbcType=INTEGER},</if>
      <if test="createUserId!=null">#{createUserId,jdbcType=VARCHAR},</if>
      <if test="adminUserIds!=null">#{adminUserIds,jdbcType=VARCHAR},</if>
      <if test="defaultFreq!=null">#{defaultFreq,jdbcType=VARCHAR},</if>
      <if test="descn!=null">#{descn,jdbcType=VARCHAR},</if>
    </trim>
  </insert>

  <!-- 修改 根据主键-->
  <update id="update" parameterType="java.util.Map">
    update plat_Group
    <set>
      <if test="groupId!=null">id=#{groupId,jdbcType=VARCHAR},</if>
      <if test="groupNum!=null">groupNum=#{groupNum,jdbcType=VARCHAR},</if>
      <if test="groupName!=null">groupName=#{groupName,jdbcType=VARCHAR},</if>
      <if test="groupSignature!=null">groupSignature=#{groupSignature,jdbcType=VARCHAR},</if>
      <if test="groupPwd!=null">groupPwd=#{groupPwd,jdbcType=VARCHAR},</if>
      <if test="groupImg!=null">groupImg=#{groupImg,jdbcType=VARCHAR},</if>
      <if test="groupType!=null">groupType=#{groupType,jdbcType=VARCHAR},</if>
      <if test="pId!=null">pId=#{pId,jdbcType=VARCHAR},</if>
      <if test="sort!=null and sort!=0">sort=#{sort,jdbcType=INTEGER},</if>
      <if test="createUserId!=null">createUserId=#{createUserId,jdbcType=VARCHAR},</if>
      <if test="adminUserIds!=null">adminUserIds=#{adminUserIds,jdbcType=VARCHAR},</if>
      <if test="defaultFreq!=null">defaultFreq=#{defaultFreq,jdbcType=VARCHAR},</if>
      <if test="descn!=null">descn=#{descn,jdbcType=VARCHAR},</if>
      <if test="CTime!=null">cTime=#{CTime,jdbcType=TIMESTAMP},</if>
    </set>
    where id=#{groupId,jdbcType=VARCHAR}
  </update>

  <!-- 删除数据 -->
  <delete id="delete" parameterType="java.lang.String">
    delete from plat_Group where id=#{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByEntity" parameterType="java.util.Map">
    delete from plat_Group <if test="_parameter!=null"><include refid="WhereClauseByEntiey"/></if>
  </delete>

  <!-- 新增数据 -->
  <insert id="insertGroupUser" parameterType="java.util.Map">
    insert into plat_GroupUser
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id!=null">id,</if>
      <if test="groupId!=null">groupId,</if>
      <if test="userId!=null">userId,</if>
      <if test="inviter!=null">inviter,</if>
      <if test="groupAlias!=null">groupAlias,</if>
      <if test="groupDescn!=null">groupDescn,</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id!=null">#{id,jdbcType=VARCHAR},</if>
      <if test="groupId!=null">#{groupId,jdbcType=VARCHAR},</if>
      <if test="userId!=null">#{userId,jdbcType=VARCHAR},</if>
      <if test="inviter!=null">#{inviter,jdbcType=VARCHAR},</if>
      <if test="groupAlias!=null">#{groupAlias,jdbcType=VARCHAR},</if>
      <if test="groupDescn!=null">#{groupDescn,jdbcType=VARCHAR},</if>
    </trim>
  </insert>
  <!-- 删除数据 -->
  <delete id="deleteGroupUser" parameterType="java.util.Map">
    delete from plat_GroupUser where groupId=#{groupId,jdbcType=VARCHAR} <if test="userId!=null">and userId=#{userId,jdbcType=VARCHAR}</if>
  </delete>
  <!-- 得到某用户所创建的用户组的数量 -->
  <select id="getGroupUserByGroupId" resultMap="groupUserMap" parameterType="java.lang.String">
    select * from plat_GroupUser where groupId=#{groupId, jdbcType=VARCHAR}
  </select>
  <!-- 根据用户Id和组Id修改用户所在组表 -->
  <update id="updateGroupUserByUserIdGroupId"  parameterType="java.util.Map">
    update plat_GroupUser
    <set>
      <if test="inviter!=null">inviter=#{inviter,jdbcType=VARCHAR},</if>
      <if test="groupAlias!=null">groupAlias=#{groupAlias,jdbcType=VARCHAR},</if>
      <if test="groupDescn!=null">groupDescn=#{groupDescn,jdbcType=VARCHAR},</if>
    </set>
    where groupId=#{groupId,jdbcType=VARCHAR} and userId=#{userId,jdbcType=VARCHAR}
  </update>

  <!-- 以下临时，应该移动到内容中======================================================================================================= -->
  <select id="searchCata" resultType="java.util.HashMap">
    select * from wt_ResDict_Ref where
    <foreach collection="array" index="index" item="tag" open="" separator="or" close="">
    title like '%${tag}%'
    </foreach>
  </select>
  <select id="searchBc" resultType="java.util.HashMap" parameterType="java.util.Map">
    select a.*, b.bcSource, b.flowURI from wt_Broadcast a
    left join wt_BCLiveFlow b on a.id=b.bcId and b.isMain=1
    where 
    <foreach collection="searchArray" index="index" item="tag" open="" separator="or" close="">
    CONCAT(a.bcTitle, '#S#', a.bcPublisher) like '%${tag}%'
    </foreach>
    <if test="inIds!=null">
    union 
    select c.*, d.bcSource, d.flowURI from wt_Broadcast c
    left join wt_BCLiveFlow d on c.id=d.bcId and d.isMain=1
    where ${orIds}
    </if>
  </select>
  <select id="getBcList" resultType="java.util.HashMap" parameterType="java.util.Map">
    select c.*, d.bcSource, d.flowURI from wt_Broadcast c
    left join wt_BCLiveFlow d on c.id=d.bcId and d.isMain=1
    where ${orIds}
  </select>
  <select id="searchPerson" resultType="java.util.HashMap" parameterType="java.util.Map">
    select * from wt_Person_Ref a, wt_Person b
    where a.personId=b.id and (
    <foreach collection="array" index="index" item="tag" open="" separator="or" close="">
    pName like '%${tag}%'
    </foreach>
    )
  </select>

  <select id="searchMa" resultType="java.util.HashMap" parameterType="java.util.Map"><!-- 可能无用 -->
    select a.*, b.smType, b.maSource, b.playURI from wt_MediaAsset a
    left join wt_MaSource b on a.id=b.maId and b.isMain=1
    where
    <foreach collection="searchArray" index="index" item="tag" open="" separator="or" close="">
    CONCAT(a.maTitle,'#S#',a.maPublisher,'#S#',a.subjectWords,'#S#',a.keyWords,'#S#',a.descn) like '%${tag}%'
    </foreach>
    <if test="inIds!=null">
    union 
    select c.*, d.smType, d.maSource, d.playURI from wt_MediaAsset c
    left join wt_MaSource d on c.id=d.maId and d.isMain=1
    where (${inIds})
    </if>
  </select>
  <select id="getMaList" resultType="java.util.HashMap" parameterType="java.util.Map">
    select c.*, d.smType, d.maSource, d.playURI from wt_MediaAsset c
    left join wt_MaSource d on c.id=d.maId and d.isMain=1
    where (${orIds})
  </select>
  <select id="searchSeqMa" resultType="java.util.HashMap" parameterType="java.util.Map"><!-- 可能无用 -->
    select a.*, case when b.count is null then 0 else b.count end as count from wt_SeqMediaAsset a
    left join (select sid, count(*) count from wt_SeqMA_Ref group by sid) b on a.id=b.sid
    <where>
    <foreach collection="searchArray" index="index" item="tag" open="" separator="or" close="">
    CONCAT(a.smaTitle,'#S#',a.smaPublisher,'#S#',a.subjectWords,'#S#',a.keyWords,'#S#',a.descn) like '%${tag}%'
    </foreach>
    </where>
    <if test="inIds!=null">
    union 
    select c.*, case when d.count is null then 0 else d.count end as count from wt_SeqMediaAsset c
    left join (select sid, count(*) count from wt_SeqMA_Ref group by sid) d on c.id=d.sid
    where (${orIds})
    </if>
  </select>
  <select id="getSeqMaList" parameterType="java.util.Map" resultType="java.util.HashMap">
    select c.*, case when d.count is null then 0 else d.count end as count from wt_SeqMediaAsset c
    left join (select sid, count(*) count from wt_SeqMA_Ref group by sid) d on c.id=d.sid
    where (${orIds})
  </select>

  <!-- 重构 -->
  <select id="refPersonById" parameterType="java.util.Map" resultType="java.util.HashMap">
    select * from wt_Person_Ref a, wt_Person b
    where a.personId=b.id
    <trim prefix="and (" suffix=")" prefixOverrides="or">
    <if test="bcIds!=null">or (${bcIds})</if>
    <if test="maIds!=null">or (${maIds})</if>
    <if test="smaIds!=null">or (${smaIds})</if>
    </trim>
  </select>
  <select id="refPlayCountById" parameterType="java.util.Map" resultType="java.util.HashMap">
    select * from wt_MediaPlayCount a
    <where><trim prefix="" suffix="" prefixOverrides="or">
    <if test="bcIds!=null">or (${bcIds})</if>
    <if test="maIds!=null">or (${maIds})</if>
    <if test="smaIds!=null">or (${smaIds})</if>
    </trim></where>
  </select>
  <select id="playingBc" parameterType="java.util.Map" resultType="java.util.HashMap">
    select * from wt_BCProgramme
    <where><trim prefix="and (" suffix=")" prefixOverrides="and">
    <if test="bcIds!=null">and (${bcIds})</if>
    <if test="weekDay!=null and weekDay!=0"> and weekDay=#{weekDay,jdbcType=INTEGER}</if>
    <if test="sort!=null"> and sort=#{sort,jdbcType=INTEGER}</if>
    <if test="timeStr"> and #{timeStr,jdbcType=VARCHAR} BETWEEN beginTime and endTime</if>
    </trim></where>
    order by bcId, validTime desc
  </select>
  <select id="refCataById" parameterType="java.util.Map" resultType="java.util.HashMap">
    select * from wt_ResDict_Ref a
    <where><trim prefix="" suffix="" prefixOverrides="or">
    <if test="bcIds!=null">or (${bcIds})</if>
    <if test="maIds!=null">or (${maIds})</if>
    <if test="smaIds!=null">or (${smaIds})</if>
    </trim></where>
  </select>
  <select id="getPlayListByIds" parameterType="java.util.Map" resultType="java.util.HashMap"><!-- 可能无用 -->
    select * from wt_MaSource where maId in (${maIds})
  </select>

  <!-- 下面是系列内容的获得 -->
  <select id="getBcById" parameterType="java.lang.String" resultType="java.util.HashMap">
    select * from wt_Broadcast where id=#{value,jdbcType=VARCHAR}
  </select>
  <select id="getMediaById" parameterType="java.lang.String" resultType="java.util.HashMap">
    select * from wt_MediaAsset where id=#{value,jdbcType=VARCHAR}
  </select>
  <select id="getSmById" parameterType="java.lang.String" resultType="java.util.HashMap">
    select * from wt_SeqMediaAsset where id=#{value,jdbcType=VARCHAR}
  </select>
  <select id="getSmSubMedias" parameterType="java.lang.String" resultType="java.util.HashMap">
    select a.* from wt_MediaAsset a, wt_SeqMA_Ref b where a.id=b.mId and b.sId=#{value,jdbcType=VARCHAR}
    order by b.columnNum desc, a.cTime desc
  </select>
  <select id="getSmSubMediaList" parameterType="java.util.Map" resultType="java.util.HashMap">
    select a.* from wt_MediaAsset a, wt_SeqMA_Ref b where a.id=b.mId and b.sId=#{sId,jdbcType=VARCHAR}
    <if test="orderByClause!=null"> ${orderByClause}</if>
    <if test="limitByClause!=null"> limit ${limitByClause}</if>
  </select>
  <select id="getCataListByTypeAndIds" resultType="java.util.HashMap" parameterType="java.util.Map">
    select * from wt_ResDict_Ref a where a.resTableName=#{resTableName,jdbcType=VARCHAR} and (${ids})
  </select>
  <select id="getPersonListByTypeAndIds" resultType="java.util.HashMap" parameterType="java.util.Map">
    select *, b.id perId from wt_Person_Ref a, wt_Person b
    where a.personId=b.id and a.resTableName=#{resTableName,jdbcType=VARCHAR} and (${ids})
  </select>
  <!-- ======================================================================================================= -->
</mapper>